{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Engineering Design Portfolio and Handbook Harry Chen For full documentation visit mkdocs.org . https://www.mkdocs.org/getting-started/ mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Introduction Audiences and Purpose Scoping Overview About Me Overview Engineering Design: An Optimization Problem Values and Skills Weaknesses Position Statement Personal Engineering Design Products Personal Programming Projects Spirula Function Grapher The Matrix Visualizer FEM Mesh Generation Praxis II: The Nurdle Filter Praxis I: Foggy Glasses Solution CIV102 Bridge Project Personal Engineering Design Processes Framing Diverging and Converging Iterative Design Verification and Validation Presentation Tools, Models, and Frameworks Personal Engineering Design Models Hoover Dam Framing, Diverging, Converging, Represent Requirements Model Personal Engineering Design Tools Biomimicry Secondary Research Brainwriting Functional Decomposition Pairwise Comparison & Pugh Chart SCAMPER Communication: Toulmin's Model of Argument References and Appendix Work Cited Individual Assessment Results Further Reading","title":"Home"},{"location":"#introduction","text":"Audiences and Purpose Scoping Overview","title":"Introduction"},{"location":"#about-me","text":"Overview Engineering Design: An Optimization Problem Values and Skills Weaknesses Position Statement","title":"About Me"},{"location":"#personal-engineering-design-products","text":"Personal Programming Projects Spirula Function Grapher The Matrix Visualizer FEM Mesh Generation Praxis II: The Nurdle Filter Praxis I: Foggy Glasses Solution CIV102 Bridge Project","title":"Personal Engineering Design Products"},{"location":"#personal-engineering-design-processes","text":"Framing Diverging and Converging Iterative Design Verification and Validation Presentation","title":"Personal Engineering Design Processes"},{"location":"#tools-models-and-frameworks","text":"Personal Engineering Design Models Hoover Dam Framing, Diverging, Converging, Represent Requirements Model Personal Engineering Design Tools Biomimicry Secondary Research Brainwriting Functional Decomposition Pairwise Comparison & Pugh Chart SCAMPER Communication: Toulmin's Model of Argument","title":"Tools, Models, and Frameworks"},{"location":"#references-and-appendix","text":"Work Cited Individual Assessment Results Further Reading","title":"References and Appendix"},{"location":"about-me/","text":"About Me This is where you can find an overview of my position: my belief, my unique understanding of engineering design process, my values and skills and their related bias, as well as my weaknesses and my attempts to overcome them. I thought about justifying them with evidences, but I found it can be sometimes easier to follow and understand if I just state them, so I decided to leave supporting evidence to later parts of my portfolio and handbook. If you are a member of the ESC102 teaching team, you may have already be familiar with me through various ways including but not limited to my submitted assignments and tutorial activites, and I hope this can help you see how I understand myself and engineering design. If you are just a visitor from the internet who scrolled to this page, I only expect I can show you that I'm not a \"normal\" person, as well as present some of my unique understandings. A digital rendering of a conch I created in mid-2022. I enjoy programming, and I have a special fascination with beaches, spirals, and seashells. Overview While I scoped out all information regarding my mental condition and difficulties I've faced in this document, I characterize myself as a highly individualized and reflective person. I engage little in popular entertainment activities, but spend most of my spare time on personal programming projects and experiments. I frequently reflect on activites I engaged in, connecting the results and processes, trying to find out the cause of my failure and what's wrong with me. I can notice details other people don't notice and often believe things have meanings. I'm extremely passionate about certain areas of STEM, mostly computer programming, with specific areas like numerical algorithms and computer graphics, which I explored in my programming activities. It's possibly that I do programming because I don't have access to tools other than a laptop, and I may find other passions when I get better conditions, but at least programming is what I will answer as my hobby when being asked about. I feel I'm sometimes too passinate that I connect everything with programming, which may not always be the most suitable way. Communication and teamwork is where I found myself difficult in. If I need to use one word to describe my situation on these, the word would be \"cursed.\" I could say when I was in high school teams, there were only three outcomes: either I did everything, or other teammates did everything and I did nothing, or our team messed up. In university courses where we were required to work as an integrated team, the outcome is a combination of the three: we divided our tasks and work on our own, and at the end there was lots of discrepancies in our team. I reflected on observations of our communication and came out with lots of potential causes and fixes, but I just kept messing up, and I seem to be the person bringing curse into every team that I'm in. Based on my individualized background, I personally view engineering design as a fun activity where I find challenge, and I found enjoyment working on them for passion and possibly kill time, but I don't have much expectation for it to be practical or beneficial. I sometimes feel the need to isolate myself from society so I can enjoy my own design activities, without bringing curse to any team who does engineering design for a \"conventional\" purpose. Sunnyside beach. During the Praxis II design activity, I visited the beach 4 times (3 times on my own) to collect information and test prototypes. My final design has an outstanding performance, but our showcase presentation was poorly organized, and there were lots of discrepancy among team members. Engineering Design: An Optimization Problem Combining what I learned in the Praxis courses and my experience in personal programming activities, I present my understanding of engineering design as an optimization problem. I couldn't find a description of a similar analogy elsewhere so I consider this as my unique understanding. In applied mathematics and science, a common problem is finding the extremum of a mathematical function. For example, in aerospace, one would try to maximize a function that takes the amount of fuel in each layer of a rocket and outputs the height traveled; In finance, one would try to maximize a function that takes the price of a product and outputs the net profit; In CAD modeling and graphics design, a program would try to minimize the error between a smooth spline and a hand-sketched path. Some optimization problems have constraints, like the amount of fuels in each layer must be non-negative, and the spline must start and end at specific points. Given a function where you want to minimize (or maximize, but here I use minimize by convention), one way to solve the optimization problem is gradient descent : if you know the direction the function goes down, just keep going in that direction and keep going down until you can't go down anymore, and you arrive at the minimum. Left : how gradient descent arrives at the minimum. Middle : a function where the global minimum can be arrived at through gradient descent. Right : a function with many local minima, gradient descent would find a poor local minimum instead of the \"best\" global minima. However, [] Mathematical optimization: find a global minimum Can be quantized through framing, but not required Go fast -> not optimal FDCR: genetic algorithm Iterative design: gradient descent Judgement before testing to save effort Values and Skills I consider some of my strong areas to have contributed to my success in individual work. I summarize them by my strong intuition, strong motivation, and self-reflection. Strong intuition. I have a strong intuition and common sense in fields including but not limited to STEM. This made me understand how things work easily, both theoretically and empirically; and after I understand the background mechanism, I can easily tell potential benefits and issues of a technique or approach and how to reduce issues. I believe this ability has contributed significantly to my success in independent projects and problem-solving activities. My intuition also made me learn new things fast and easily adapt to tools created by someone else even with little documentation, which made me quickly learn tools ranging from hand tools to household appliances to CAD software to programming interfaces. Strong motivation. I am enthuasiastic in numerous areas of STEM. I enjoy trying, testing, and exploring STEM techniques by my own hand, but I don't reject theoretical understanding and divergent thinking activities. While my experience is mostly limited to software due to material restriction, previously I also enjoyed activites related to mechatronics and chemistry when I got the materials. My enthuasiasm not only made me spend most of my spare time exploring STEM but also made me maintain my interest throughout a number of school projects. Reflection and contemplation. I consider myself a reflective person. When I feel I need a break from STEM activities, I often start reflecting on myself without intentionally trying to do so. I often come out with unique understanding of things and insights into my previous failure experiences, which helped me apply suitable techniques and potentially avoid similar failures. These values and skills contributed to some of my biases. My strength and passion in computing made me approach many problems from a programming perspective. An example is my understanding of engineering design as an optimization problem, which is also the result of my contemplation. 3D landscape of the combinatorics function visualized in real-time on the GPU, rendered with a web tool I programmed completely from scratch without dependency. Weaknesses My numerous noticed weaknesses are related to my values and skills, plus communication and managing conflicts. Attempts have been made to overcome these conflicts and maintain my optimism for the outcome of engineering design activities and personal development. Hyperfocus. I consider hyperfocus to be my greatest weakness in completing projects. I cannot count in how many assigned and projects I became extremely enthuasiastic in one aspect and overlook the overall requirement, and similar cases also happened in personal projects. I often do an assignment without carefully reading the instruction, and start prototyping and testing without going through much secondary research and analysis. I think my strong intuition can worsen this, because it made me not approaching concepts and tasks rigorously and systematically, and therefore I spend more time trying to figure out the less important parts. While my reflective nature allowed me to notice this issue, my attempts to fix it has not been successful. I had short memory if I force myself to read the task requirements. I've tried framing the requirements and setting timers for each part, which worked for several days, but then I couldn't resist the temptation to ignore the timer. I also tried putting my least favorite task first in my to-do list, but I found if I force myself to do something I don't like doing I often stare at the screen or paper doing nothing for hours, and I ended up only mess up my daily routine without getting anything done. I recently tried planning tasks by following a general to specific streamline and use a random number generator to decide the order to implement each part. While this strategy did help controlling hyperfocus, I feel with this strategy it is difficult to make changes if I notice fundamental issues. Communication. As mentioned, I use the word \"cursed\" to describe my communication. Since I could remember thing I couldn't communicate properly and am often both misunderstood others and made others misunderstand me. This is especially a problem when I need to engage in engineering design activities in a team where psychological safety and diverse feedback is important. I find it difficult to keep a middle ground between inaction and make people feel I'm aggressive, and I often don't get people's emotion toward me if they don't explicitly state. Previous experiences tell me what I can do for a deliverable team product is either inaction or complete domination, and attempts to integrate each other's conflicting opinions would almost always mess things up. While this may sound against the norm, it was what has been validated to work the best for me in team activities. Another digital rendering I created by writing code . It took me about half an hour to create it, when I was slacking during an early Praxis II meeting after midnight, after I decided not to give any input to my team but was bored of watching other team members working. Position Statement I am an engineering student with a strong skill and enthuasiasm in programming. I am experienced in computer graphics and numerical algorithms through 5 years of indepedent experimenting and exploration. My biggest strength is my strong intuition and learning skills. While I often think solutions from a programming perspective and can easily concentrate on my passion activities, I frequently reflect on the causes behind outcomes and seek improvement.","title":"About Me"},{"location":"about-me/#about-me","text":"This is where you can find an overview of my position: my belief, my unique understanding of engineering design process, my values and skills and their related bias, as well as my weaknesses and my attempts to overcome them. I thought about justifying them with evidences, but I found it can be sometimes easier to follow and understand if I just state them, so I decided to leave supporting evidence to later parts of my portfolio and handbook. If you are a member of the ESC102 teaching team, you may have already be familiar with me through various ways including but not limited to my submitted assignments and tutorial activites, and I hope this can help you see how I understand myself and engineering design. If you are just a visitor from the internet who scrolled to this page, I only expect I can show you that I'm not a \"normal\" person, as well as present some of my unique understandings. A digital rendering of a conch I created in mid-2022. I enjoy programming, and I have a special fascination with beaches, spirals, and seashells.","title":"About Me"},{"location":"about-me/#overview","text":"While I scoped out all information regarding my mental condition and difficulties I've faced in this document, I characterize myself as a highly individualized and reflective person. I engage little in popular entertainment activities, but spend most of my spare time on personal programming projects and experiments. I frequently reflect on activites I engaged in, connecting the results and processes, trying to find out the cause of my failure and what's wrong with me. I can notice details other people don't notice and often believe things have meanings. I'm extremely passionate about certain areas of STEM, mostly computer programming, with specific areas like numerical algorithms and computer graphics, which I explored in my programming activities. It's possibly that I do programming because I don't have access to tools other than a laptop, and I may find other passions when I get better conditions, but at least programming is what I will answer as my hobby when being asked about. I feel I'm sometimes too passinate that I connect everything with programming, which may not always be the most suitable way. Communication and teamwork is where I found myself difficult in. If I need to use one word to describe my situation on these, the word would be \"cursed.\" I could say when I was in high school teams, there were only three outcomes: either I did everything, or other teammates did everything and I did nothing, or our team messed up. In university courses where we were required to work as an integrated team, the outcome is a combination of the three: we divided our tasks and work on our own, and at the end there was lots of discrepancies in our team. I reflected on observations of our communication and came out with lots of potential causes and fixes, but I just kept messing up, and I seem to be the person bringing curse into every team that I'm in. Based on my individualized background, I personally view engineering design as a fun activity where I find challenge, and I found enjoyment working on them for passion and possibly kill time, but I don't have much expectation for it to be practical or beneficial. I sometimes feel the need to isolate myself from society so I can enjoy my own design activities, without bringing curse to any team who does engineering design for a \"conventional\" purpose. Sunnyside beach. During the Praxis II design activity, I visited the beach 4 times (3 times on my own) to collect information and test prototypes. My final design has an outstanding performance, but our showcase presentation was poorly organized, and there were lots of discrepancy among team members.","title":"Overview"},{"location":"about-me/#engineering-design-an-optimization-problem","text":"Combining what I learned in the Praxis courses and my experience in personal programming activities, I present my understanding of engineering design as an optimization problem. I couldn't find a description of a similar analogy elsewhere so I consider this as my unique understanding. In applied mathematics and science, a common problem is finding the extremum of a mathematical function. For example, in aerospace, one would try to maximize a function that takes the amount of fuel in each layer of a rocket and outputs the height traveled; In finance, one would try to maximize a function that takes the price of a product and outputs the net profit; In CAD modeling and graphics design, a program would try to minimize the error between a smooth spline and a hand-sketched path. Some optimization problems have constraints, like the amount of fuels in each layer must be non-negative, and the spline must start and end at specific points. Given a function where you want to minimize (or maximize, but here I use minimize by convention), one way to solve the optimization problem is gradient descent : if you know the direction the function goes down, just keep going in that direction and keep going down until you can't go down anymore, and you arrive at the minimum. Left : how gradient descent arrives at the minimum. Middle : a function where the global minimum can be arrived at through gradient descent. Right : a function with many local minima, gradient descent would find a poor local minimum instead of the \"best\" global minima. However, [] Mathematical optimization: find a global minimum Can be quantized through framing, but not required Go fast -> not optimal FDCR: genetic algorithm Iterative design: gradient descent Judgement before testing to save effort","title":"Engineering Design: An Optimization Problem"},{"location":"about-me/#values-and-skills","text":"I consider some of my strong areas to have contributed to my success in individual work. I summarize them by my strong intuition, strong motivation, and self-reflection. Strong intuition. I have a strong intuition and common sense in fields including but not limited to STEM. This made me understand how things work easily, both theoretically and empirically; and after I understand the background mechanism, I can easily tell potential benefits and issues of a technique or approach and how to reduce issues. I believe this ability has contributed significantly to my success in independent projects and problem-solving activities. My intuition also made me learn new things fast and easily adapt to tools created by someone else even with little documentation, which made me quickly learn tools ranging from hand tools to household appliances to CAD software to programming interfaces. Strong motivation. I am enthuasiastic in numerous areas of STEM. I enjoy trying, testing, and exploring STEM techniques by my own hand, but I don't reject theoretical understanding and divergent thinking activities. While my experience is mostly limited to software due to material restriction, previously I also enjoyed activites related to mechatronics and chemistry when I got the materials. My enthuasiasm not only made me spend most of my spare time exploring STEM but also made me maintain my interest throughout a number of school projects. Reflection and contemplation. I consider myself a reflective person. When I feel I need a break from STEM activities, I often start reflecting on myself without intentionally trying to do so. I often come out with unique understanding of things and insights into my previous failure experiences, which helped me apply suitable techniques and potentially avoid similar failures. These values and skills contributed to some of my biases. My strength and passion in computing made me approach many problems from a programming perspective. An example is my understanding of engineering design as an optimization problem, which is also the result of my contemplation. 3D landscape of the combinatorics function visualized in real-time on the GPU, rendered with a web tool I programmed completely from scratch without dependency.","title":"Values and Skills"},{"location":"about-me/#weaknesses","text":"My numerous noticed weaknesses are related to my values and skills, plus communication and managing conflicts. Attempts have been made to overcome these conflicts and maintain my optimism for the outcome of engineering design activities and personal development. Hyperfocus. I consider hyperfocus to be my greatest weakness in completing projects. I cannot count in how many assigned and projects I became extremely enthuasiastic in one aspect and overlook the overall requirement, and similar cases also happened in personal projects. I often do an assignment without carefully reading the instruction, and start prototyping and testing without going through much secondary research and analysis. I think my strong intuition can worsen this, because it made me not approaching concepts and tasks rigorously and systematically, and therefore I spend more time trying to figure out the less important parts. While my reflective nature allowed me to notice this issue, my attempts to fix it has not been successful. I had short memory if I force myself to read the task requirements. I've tried framing the requirements and setting timers for each part, which worked for several days, but then I couldn't resist the temptation to ignore the timer. I also tried putting my least favorite task first in my to-do list, but I found if I force myself to do something I don't like doing I often stare at the screen or paper doing nothing for hours, and I ended up only mess up my daily routine without getting anything done. I recently tried planning tasks by following a general to specific streamline and use a random number generator to decide the order to implement each part. While this strategy did help controlling hyperfocus, I feel with this strategy it is difficult to make changes if I notice fundamental issues. Communication. As mentioned, I use the word \"cursed\" to describe my communication. Since I could remember thing I couldn't communicate properly and am often both misunderstood others and made others misunderstand me. This is especially a problem when I need to engage in engineering design activities in a team where psychological safety and diverse feedback is important. I find it difficult to keep a middle ground between inaction and make people feel I'm aggressive, and I often don't get people's emotion toward me if they don't explicitly state. Previous experiences tell me what I can do for a deliverable team product is either inaction or complete domination, and attempts to integrate each other's conflicting opinions would almost always mess things up. While this may sound against the norm, it was what has been validated to work the best for me in team activities. Another digital rendering I created by writing code . It took me about half an hour to create it, when I was slacking during an early Praxis II meeting after midnight, after I decided not to give any input to my team but was bored of watching other team members working.","title":"Weaknesses"},{"location":"about-me/#position-statement","text":"I am an engineering student with a strong skill and enthuasiasm in programming. I am experienced in computer graphics and numerical algorithms through 5 years of indepedent experimenting and exploration. My biggest strength is my strong intuition and learning skills. While I often think solutions from a programming perspective and can easily concentrate on my passion activities, I frequently reflect on the causes behind outcomes and seek improvement.","title":"Position Statement"},{"location":"appendix/","text":"References https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7851038/ https://en.wikipedia.org/wiki/Hyperfocus https://en.wikipedia.org/wiki/Flow_(psychology) Individual Assessment Results Further Reading","title":"Appendix"},{"location":"appendix/#references","text":"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7851038/ https://en.wikipedia.org/wiki/Hyperfocus https://en.wikipedia.org/wiki/Flow_(psychology)","title":"References"},{"location":"appendix/#individual-assessment-results","text":"","title":"Individual Assessment Results"},{"location":"appendix/#further-reading","text":"","title":"Further Reading"},{"location":"design-processes/","text":"Personal Engineering Design Processes Focus on examples helpful for TMF, not reflection. Framing Understanding what is a good design Want to make web app Mesh: low ratio (research why it's good; log det as metric, better than strain), speed Spirula: rendering speed and accuracy; fps & visual judgement Working with stakeholders Understand what features people (I) need for a matrix visualizer Some numerical metrics are simple; Bridge project: FoS, overall is min of all; Detailed objectives \"Good\" metric to help converging and for presentation: glass fogginess Some not too simple, holistically/pairwise comparison (ex. volunteer experience) Diverging and Converging Global optimization, need diverse feedback Done in teams: two praxis ones, brainwriting Individual: much easier to fall into dead spots; research reference designs for diverse startpoints; Sometimes need force doing research to fight temptation to try own (optimizing marching cubes & edge splitting didn't work); Add novelity based on secondary research (trust region for mesh optimization) Attribute listing: nurdle/wood Biomimicry: glasses Previously (glasses, camera) unbelievable ideas with little secondary research didn't work well, might eliminate if no much secondary research if there's no effort to prototype/test Pairwise comparison mostly match intuition (nurdle), but logically it has potential to reduce bias Pugh chart: worked for praxis I final, not suitable for lots of objectives Manage lots of objectives: Make sure other objectives are met in not too detailed design; Test and compare specific objectives in detailed design (nurdle) Iterative Design Despite not being a focus of the praxis course, iterative design is a large part of my engineering design activities done so far, in both my personal programming projects and the nurdle filter in Praxis II. I found the term \"iterative design\" by describing my design process to ChatGPT. According to Wikipedia , it is characterized by a cycle of prototyping, testing, and refinement. As someone passionate about creating things and see them work in practice, iterative design has naturally become a large part of my personal projects. The shading model for Spirula was tweaked during iterations of testing to achieve visual clarity and aesthetic. The FEM mesh generation tool was tested to reveal unexpected issues, and attempts to fix the issues were made. The mesh generation algorithm described in the paper was tested to be slow and have ambiguity issues. I proposed a technique based on trust region to speed up mesh compression, which was tested effective. I also made several attempts to detect and resolve ambiguity. In Praxis II, the SCAMPER methods were used to change the hydrodynamic separator in stormwater treatment to a solution based on a water bucket and filtering meshes. I decided to directly prototype and test the design since it wasn't difficult. As testing revealed unexpected issues, I made adjustments to fix the issues, with either a diverging-converging activity or what came into my mind. Testing of nurdle filter shows wood debris can also pass the filter. I responded my making an filter consisting of multiple layers of meshes, where wood can be caught by the rough walls inside holes, while spherical nurdles can still pass smoothly. Verification and Validation Framing can be inaccurate (ML camera), direct validation if not too difficult (ex. algorithm like mesh, nurdle) No metric: validate by interviewing AGF Verification: measure glass fogginess and airflow to get metrics for converging Presentation","title":"Processes"},{"location":"design-processes/#framing","text":"Understanding what is a good design Want to make web app Mesh: low ratio (research why it's good; log det as metric, better than strain), speed Spirula: rendering speed and accuracy; fps & visual judgement Working with stakeholders Understand what features people (I) need for a matrix visualizer Some numerical metrics are simple; Bridge project: FoS, overall is min of all; Detailed objectives \"Good\" metric to help converging and for presentation: glass fogginess Some not too simple, holistically/pairwise comparison (ex. volunteer experience)","title":"Framing"},{"location":"design-processes/#diverging-and-converging","text":"Global optimization, need diverse feedback Done in teams: two praxis ones, brainwriting Individual: much easier to fall into dead spots; research reference designs for diverse startpoints; Sometimes need force doing research to fight temptation to try own (optimizing marching cubes & edge splitting didn't work); Add novelity based on secondary research (trust region for mesh optimization) Attribute listing: nurdle/wood Biomimicry: glasses Previously (glasses, camera) unbelievable ideas with little secondary research didn't work well, might eliminate if no much secondary research if there's no effort to prototype/test Pairwise comparison mostly match intuition (nurdle), but logically it has potential to reduce bias Pugh chart: worked for praxis I final, not suitable for lots of objectives Manage lots of objectives: Make sure other objectives are met in not too detailed design; Test and compare specific objectives in detailed design (nurdle)","title":"Diverging and Converging"},{"location":"design-processes/#iterative-design","text":"Despite not being a focus of the praxis course, iterative design is a large part of my engineering design activities done so far, in both my personal programming projects and the nurdle filter in Praxis II. I found the term \"iterative design\" by describing my design process to ChatGPT. According to Wikipedia , it is characterized by a cycle of prototyping, testing, and refinement. As someone passionate about creating things and see them work in practice, iterative design has naturally become a large part of my personal projects. The shading model for Spirula was tweaked during iterations of testing to achieve visual clarity and aesthetic. The FEM mesh generation tool was tested to reveal unexpected issues, and attempts to fix the issues were made. The mesh generation algorithm described in the paper was tested to be slow and have ambiguity issues. I proposed a technique based on trust region to speed up mesh compression, which was tested effective. I also made several attempts to detect and resolve ambiguity. In Praxis II, the SCAMPER methods were used to change the hydrodynamic separator in stormwater treatment to a solution based on a water bucket and filtering meshes. I decided to directly prototype and test the design since it wasn't difficult. As testing revealed unexpected issues, I made adjustments to fix the issues, with either a diverging-converging activity or what came into my mind. Testing of nurdle filter shows wood debris can also pass the filter. I responded my making an filter consisting of multiple layers of meshes, where wood can be caught by the rough walls inside holes, while spherical nurdles can still pass smoothly.","title":"Iterative Design"},{"location":"design-processes/#verification-and-validation","text":"Framing can be inaccurate (ML camera), direct validation if not too difficult (ex. algorithm like mesh, nurdle) No metric: validate by interviewing AGF Verification: measure glass fogginess and airflow to get metrics for converging","title":"Verification and Validation"},{"location":"design-processes/#presentation","text":"","title":"Presentation"},{"location":"design-products/","text":"Personal Engineering Design Products This page lists the products of my engineering design activities in the past year, since September 2022. As per assignment requirements, I write this page to present what are done to an external audience with no prior knowledge of the projects. While not focusing on the process and takeaways, I intentionally connect them with my positions mentioned on the previous page, including my personality, strengths, and attempts to overcome my weaknesses. Personal Programming Projects As mentioned in my about me, I created a lot of personal projects purely out of passion and to demonstrate my skills to myself. Most of them are not stunning products but focused on what I \"like\" rather than what I \"need\", and therefore a lot of them are experimental and ongoing. I don't have a particular goal for them, and I feel I'm more free when I don't have to work toward an objective, which can be hard to achieve due to hyperfocus. I also have multiple projects running at the same time and frequently start new projects, since I may become bored at one project, and I can always choose to switch back later. Some noticeable ones in the past year are the Spirula function grapher, the FEM mesh generation experiment, and the 3D matrix visualizer. Spirula Function Grapher The Spirula function grapher is a web-based tool that instantly renders user-input mathematical functions. The interface is very simple: the user enters a function on the box on the top right, and the tool displays it. It supports explicit, implicit, and parametric equations, as well as functions defined in complex domains. I created it out of my passion in computer graphics, my need for fast visualization of 3D implicit surfaces, and the lack of such a tool I can find om the internet. I have been maintaining and constantly updating this tool since April 2022, for my demand for additional features during use and as passion activities: it initially only graphs 3D implicit surfaces, but I implemented complex domain coloring in 2D and 3D in October 2022, updated the parser in January 2022, added support for parametric surfaces in February 2022, added several non-elementary functions in March 2022, and I still have plans for more functionality like automatic differentiation and exporting 3D models. I like how this project has different parts requiring different knowledge and techniques, allowing me to switch between them and reduce mental fatigue. A function over the complex domain graphed in Spirula Other they me enjoying the creation process, the product has benefitted me in unintentional ways. I often use Spirula as a tool to create artworks: since I'm weak in communication and often experience frustration, I use 3D modeling artwork as therapy. I would say it's much more effective than most traditional and digital arts that can take a long time to see the result: Spirula renders it immediately as I update an equation, and there's still rooms for me to tweak the parameters and refine the results. I share the results on social media and received positive feedback, which I think have improved my confidence over my programming strength. While there are numorous thankful emails and feature requests from people who found my works on the internet and benefit from them, and they inspired to create more functionality like animation, I still view this tool as something I created for myself and became proud of my ability. Some artworks I created using Spirula. Left : a jellyfish created through the parametric surface grapher Right : the Mandelbulb over toric coordinates through the implicit surface grapher Bottom : X-ray mode of the parametric surface grapher based on the physically-based X-ray model The Matrix Visualizer I created the matrix visualizer in 2019 to visualize matrix transformation when I just started learning linear algebra. The internal algorithm of the tool was heavily updated in November 2022. It visualizes 2D and 3D transformation matrices as well as 4D affine matrices. It has computation of determinant and eigensystem and visualization for eigenvectors. It also allows users to try different models with varying symmetry. I was researching the QR eigenvalue algorithm for another personal project, and I decided to update this tool as an exercise, and considering it's \"grade-school\" eigensystem computation was very unstable in practice. The updated algorithm was much more robust over arbitrary user inputs and edge cases, and the addition of the sphere model reduced anisotropy in visualization. According to Google Search Console, the tool received more than 2,000 Google search clicks in the past 3 months, confirming the impact of my technical strength. Interface of the matrix visualizer. I implemented link sharing after seeing the popularity of my tool. You can see an example here: http://harry7557558.github.io/tools/matrixv.html#m=1,1,1;1,1,0;1,0,1&g=isosphere&s=2&tf=0 FEM Mesh Generation Inspired by the CIV102 course, I started a new programming project about structural analysis during my winter break, and I soon sticked to the Finite Element Method (FEM) . Part of FEM in 3D is generating a tetrahedral mesh that avoids tetrahedra with high aspect ratio. Since mesh generation is also required by my several other projects including but not limited to Spirula, I spent a while researching mesh generation techniques. The project is still ongoing in parallel to my several other projects, since I'm eager testing my capability but I don't want to grow bored. On the FEM part, I tested elements with different shapes and orders on several easily parameterized shapes. On the mesh generation part, I scoped my design space to mesh generation on implicit shapes and got some pleasing results. Considering the result section of numorous research papers and my try on similar tools I found on the internet, I think the mesh generation technique I'm working on can have a great potential for its high speed and mesh quality. Left : a graphics interface I created to visualize stress in an irregular beam computed by my FEM code Right : a screenshot I took while testing my mesh generation technique Praxis II: The Nurdle Filter Background: AGF Features Passionate about Praxis I: Foggy Glasses Solution CIV102 Bridge Project While my overall experience with this course project is negative, I still want to mention my final project for this civil engineering course in my portfolio. The project is about designing and building a bridge with a single sheet of matboard paper, and the bridge will be tested against a heavy moving model train. The project was done in a team of 3 members, and programming was required for evaluating the design. Despite a large percentage of the assignment evaluation factor is the documentation and presentation of the design, driven by passion, I coded an optimization framework completely independently from scratch to optimize the model. My code represents the bridge in terms of several parameters, evaluates the factor of safety of numerous failure modes and take their minimum as the objective to maximize, and optimizes the objective with respect to parameters subject to the constraint that the required materials must fit into the given matboard paper. The optimization was first done through my modification of the simulated annealing algorithm to take gradient into consideration, and then refined with SciPy's optimization routine. The layout of how the matboard will be cut generated by my optimization program. In the exported page , information of an component is shown when the mouse hovers the component. I chose an inverted trapezoidal cross section in contrast to rectangular like most other teams did, based on my intuition, secondary research, and analysis done by my program. However, this lead to a deadly failure mode not taught in the CIV102 course, which I didn't notice until two days before the bridge testing, after we finished building the bridge and submitted the design. During testing, the bridge passed a 400N load but failed at 550N due to the same failure mode as late noticed. We received a poor grade on presenting the design because most of the effort was spent on optimization via programming, which was not part of the project evaluation rubric. The bridge building in process, which 3 members pulled an all-nighter to work on","title":"Products"},{"location":"design-products/#personal-programming-projects","text":"As mentioned in my about me, I created a lot of personal projects purely out of passion and to demonstrate my skills to myself. Most of them are not stunning products but focused on what I \"like\" rather than what I \"need\", and therefore a lot of them are experimental and ongoing. I don't have a particular goal for them, and I feel I'm more free when I don't have to work toward an objective, which can be hard to achieve due to hyperfocus. I also have multiple projects running at the same time and frequently start new projects, since I may become bored at one project, and I can always choose to switch back later. Some noticeable ones in the past year are the Spirula function grapher, the FEM mesh generation experiment, and the 3D matrix visualizer.","title":"Personal Programming Projects"},{"location":"design-products/#spirula-function-grapher","text":"The Spirula function grapher is a web-based tool that instantly renders user-input mathematical functions. The interface is very simple: the user enters a function on the box on the top right, and the tool displays it. It supports explicit, implicit, and parametric equations, as well as functions defined in complex domains. I created it out of my passion in computer graphics, my need for fast visualization of 3D implicit surfaces, and the lack of such a tool I can find om the internet. I have been maintaining and constantly updating this tool since April 2022, for my demand for additional features during use and as passion activities: it initially only graphs 3D implicit surfaces, but I implemented complex domain coloring in 2D and 3D in October 2022, updated the parser in January 2022, added support for parametric surfaces in February 2022, added several non-elementary functions in March 2022, and I still have plans for more functionality like automatic differentiation and exporting 3D models. I like how this project has different parts requiring different knowledge and techniques, allowing me to switch between them and reduce mental fatigue. A function over the complex domain graphed in Spirula Other they me enjoying the creation process, the product has benefitted me in unintentional ways. I often use Spirula as a tool to create artworks: since I'm weak in communication and often experience frustration, I use 3D modeling artwork as therapy. I would say it's much more effective than most traditional and digital arts that can take a long time to see the result: Spirula renders it immediately as I update an equation, and there's still rooms for me to tweak the parameters and refine the results. I share the results on social media and received positive feedback, which I think have improved my confidence over my programming strength. While there are numorous thankful emails and feature requests from people who found my works on the internet and benefit from them, and they inspired to create more functionality like animation, I still view this tool as something I created for myself and became proud of my ability. Some artworks I created using Spirula. Left : a jellyfish created through the parametric surface grapher Right : the Mandelbulb over toric coordinates through the implicit surface grapher Bottom : X-ray mode of the parametric surface grapher based on the physically-based X-ray model","title":"Spirula Function Grapher"},{"location":"design-products/#the-matrix-visualizer","text":"I created the matrix visualizer in 2019 to visualize matrix transformation when I just started learning linear algebra. The internal algorithm of the tool was heavily updated in November 2022. It visualizes 2D and 3D transformation matrices as well as 4D affine matrices. It has computation of determinant and eigensystem and visualization for eigenvectors. It also allows users to try different models with varying symmetry. I was researching the QR eigenvalue algorithm for another personal project, and I decided to update this tool as an exercise, and considering it's \"grade-school\" eigensystem computation was very unstable in practice. The updated algorithm was much more robust over arbitrary user inputs and edge cases, and the addition of the sphere model reduced anisotropy in visualization. According to Google Search Console, the tool received more than 2,000 Google search clicks in the past 3 months, confirming the impact of my technical strength. Interface of the matrix visualizer. I implemented link sharing after seeing the popularity of my tool. You can see an example here: http://harry7557558.github.io/tools/matrixv.html#m=1,1,1;1,1,0;1,0,1&g=isosphere&s=2&tf=0","title":"The Matrix Visualizer"},{"location":"design-products/#fem-mesh-generation","text":"Inspired by the CIV102 course, I started a new programming project about structural analysis during my winter break, and I soon sticked to the Finite Element Method (FEM) . Part of FEM in 3D is generating a tetrahedral mesh that avoids tetrahedra with high aspect ratio. Since mesh generation is also required by my several other projects including but not limited to Spirula, I spent a while researching mesh generation techniques. The project is still ongoing in parallel to my several other projects, since I'm eager testing my capability but I don't want to grow bored. On the FEM part, I tested elements with different shapes and orders on several easily parameterized shapes. On the mesh generation part, I scoped my design space to mesh generation on implicit shapes and got some pleasing results. Considering the result section of numorous research papers and my try on similar tools I found on the internet, I think the mesh generation technique I'm working on can have a great potential for its high speed and mesh quality. Left : a graphics interface I created to visualize stress in an irregular beam computed by my FEM code Right : a screenshot I took while testing my mesh generation technique","title":"FEM Mesh Generation"},{"location":"design-products/#praxis-ii-the-nurdle-filter","text":"Background: AGF Features Passionate about","title":"Praxis II: The Nurdle Filter"},{"location":"design-products/#praxis-i-foggy-glasses-solution","text":"","title":"Praxis I: Foggy Glasses Solution"},{"location":"design-products/#civ102-bridge-project","text":"While my overall experience with this course project is negative, I still want to mention my final project for this civil engineering course in my portfolio. The project is about designing and building a bridge with a single sheet of matboard paper, and the bridge will be tested against a heavy moving model train. The project was done in a team of 3 members, and programming was required for evaluating the design. Despite a large percentage of the assignment evaluation factor is the documentation and presentation of the design, driven by passion, I coded an optimization framework completely independently from scratch to optimize the model. My code represents the bridge in terms of several parameters, evaluates the factor of safety of numerous failure modes and take their minimum as the objective to maximize, and optimizes the objective with respect to parameters subject to the constraint that the required materials must fit into the given matboard paper. The optimization was first done through my modification of the simulated annealing algorithm to take gradient into consideration, and then refined with SciPy's optimization routine. The layout of how the matboard will be cut generated by my optimization program. In the exported page , information of an component is shown when the mouse hovers the component. I chose an inverted trapezoidal cross section in contrast to rectangular like most other teams did, based on my intuition, secondary research, and analysis done by my program. However, this lead to a deadly failure mode not taught in the CIV102 course, which I didn't notice until two days before the bridge testing, after we finished building the bridge and submitted the design. During testing, the bridge passed a 400N load but failed at 550N due to the same failure mode as late noticed. We received a poor grade on presenting the design because most of the effort was spent on optimization via programming, which was not part of the project evaluation rubric. The bridge building in process, which 3 members pulled an all-nighter to work on","title":"CIV102 Bridge Project"},{"location":"introduction/","text":"Introduction Audiences and Purpose Me: organize, reference for TMF, better understand myself Teaching Team: marked assignment Interested people: put on GitHub to give people a better understanding Scoping Include Make others understand myself Things I'm proud of Things I need to improve TMF and where they are suitable, as reference Supporting evidences Don't include Private information (specifically medical diagnosis) Difficulties not directly related to engineering design Technical details Before Sept. 2022 Focus on Individual experiences and reflection (reframe the assignment requirements) Overview Format choice: HTML for its purpose, bias as a programmer About me: introduce myself, understanding of engineering design as an optimization problem, values and skills, weakenesses and how to deal with them ED products: list, 4 specific ones in order of positive to negative experiences, expressed in a positive way suitable for a portfolio, highlight specific aspects ED process: framing, optimization methods, testing, presentation; reference to products TMF: individual engineering design models and tools, put communication in a separate section Personal management: can help because it's essential to ED References: work cited, lists that helps understand better Disclaimer Does not contain any tracker Site is public, currently no shared link, not indexable by search engines; May be updated after assignment is graded to remove photos of other people","title":"Introduction"},{"location":"introduction/#introduction","text":"","title":"Introduction"},{"location":"introduction/#audiences-and-purpose","text":"Me: organize, reference for TMF, better understand myself Teaching Team: marked assignment Interested people: put on GitHub to give people a better understanding","title":"Audiences and Purpose"},{"location":"introduction/#scoping","text":"Include Make others understand myself Things I'm proud of Things I need to improve TMF and where they are suitable, as reference Supporting evidences Don't include Private information (specifically medical diagnosis) Difficulties not directly related to engineering design Technical details Before Sept. 2022 Focus on Individual experiences and reflection (reframe the assignment requirements)","title":"Scoping"},{"location":"introduction/#overview","text":"Format choice: HTML for its purpose, bias as a programmer About me: introduce myself, understanding of engineering design as an optimization problem, values and skills, weakenesses and how to deal with them ED products: list, 4 specific ones in order of positive to negative experiences, expressed in a positive way suitable for a portfolio, highlight specific aspects ED process: framing, optimization methods, testing, presentation; reference to products TMF: individual engineering design models and tools, put communication in a separate section Personal management: can help because it's essential to ED References: work cited, lists that helps understand better","title":"Overview"},{"location":"introduction/#disclaimer","text":"Does not contain any tracker Site is public, currently no shared link, not indexable by search engines; May be updated after assignment is graded to remove photos of other people","title":"Disclaimer"},{"location":"tmf/","text":"Tools, Models, and Frameworks This page lists the models and tools that I have used before and would like to consider for future use. Based on my understanding of engineering design process as an optimization problem, I order them by the steps of engineering design: framing, diverging and converging, iterative design, and communication. I chose to put communication in a separate section considering I'm an individualized person whose previous engineering design expereinces are done on my own. Reflecting on my past success and failure experiences, I found many of these TMFs controversial, and I evaluate them and argue their effectiveness with logic and evidence. Personal Engineering Design Models Hoover Dam Transform real world -> models, models are easier to solve and analyze Evidence: UTAT, personal projects Useful when the problem can be easily math'd; (robotics, scientific computing, CG) Not good for lots of human factors Issues: framing can be inaccurate, unexpected issues; Need to leave something to validation Framing, Diverging, Converging, Represent Global optimization done by humans Divergence: avoid bias and blind spots, usually done in teams; Individual: research reference designs Convergence: eliminate through research/analysis, analogous to shortcuts/interpolation for numerical optimization Negotiate objectives during diverging and testing Make more detailed/specific through iterations (refinement in optimization) Be patient, too fast -> bad results Requirements Model As a model used in the framing strand, the requirements model frames stakeholder requirements into a list (and sometimes hierarchy) of objectives, which each include numerical metrics, criteria mapping metrics to utility, and constraints deciding whether a solution is feasible. I understand this from how I understand engineering design as an optimization problem where the total utility is to be maximized, subject to hard constraints that must not violate and soft constraints that penalty the utility. While in an engineering design activity done by humans, making the objectives can encourage better understanding of stakeholder needs and give directions for divergence for convergence. Since numerical metrics are necessary for optimization algorithms used by computers, I've been doing framing works for my programming projects. One example would be an optimization in the mesh generator, where I want each tetrahedron to be close to regular, and I model the utility of an element as the logarithm of its volume after normalization to a specific size, which empirically gives a much better result than a stress-based metric like used in several papers. The constraint would be that the signed volume must be non-negative, otherwise the logarithm would be undefined. Another example is the CIV102 bridge project, where I tried to maximize the overall factor of safety to meet the objective to loading more weights. The code for the metric for the \"goodness\" of a mesh element, along with other metrics (commented code) that didn't work as good. This demonstrates how the choice of a metric can affect the optimization result and process. In human-delivered engineering design activities, the metric in the requirements model has been proven useful for verification. For example, when testing foggy glasses solutions for Praxis I, I found a metric for the visibility (in contrast to blurriness) of digital images through secondary research, and my team conducted test for four cardiate solutions. The metrics were used in Pugh charts that helped us converge to a final design. However, overall in praxis courses, I found the metrics can be not helpful and unnecessary, and they can even make verification more difficult and less representative. We spent some time researching metrics when writing the design brief and the RFP. And when working with other people's design brief and RFP, we found metrics to be difficult to test and don't accurately model the design objective. For example, the nurdle RFP used force required to operate the design as an metric for physical strain, but in testing we found holding a hand shovel can be tiresome even though little force was required. And we could not access the cited research for a so called \"material sustainability index.\" At the end, we had to reframe the objectives and leave some testing to validation instead of verification. Based on these experiences, I conclude that while framing requirements into objectives can benefit engineering design in many ways, the choice on a metric and whether a metric should be used depends on the case. In the case where there are multiple cardiate designs and there are research showing the effectiveness of a metric on the situation, a metric that is easy to test can greatly help convergence. However, if finding a representative metric is difficult (which is common for objectives involving human factors), one may consider finding other ways to converge and verify/validate the solution. Even if a metric is needed, engineers still need to figure out a metric that is representative and easy to measure. Personal Engineering Design Tools https://dhrumil0902.github.io/portfolio/handbook.pdf Purpose, how, example, advantage/disadvantage (list) http://xueqilin.me/engsci-2t4/esc102/handbook.pdf https://raw.githubusercontent.com/JLefebvre55/ESC102-Handbook/master/Handbook.pdf https://www.peterfisk.com/wp-content/uploads/2016/01/27-Creativity-Tools-for-Divergent-and-Convergent-Thinking.pdf Follow an order of design process (after understanding the problem) - Do some individual brainstorming (biomimicry, attribute listing, lotus bloosom, etc.) before secondary research to avoid anchoring - Generate a variety of ideas through brainwriting Biomimicry Inspired by nature; Nature is good at optimization; Suitable for me, it's an individual acticity itself, and I'm a fan of nature Advantages: take a mental break Think similar problems in nature itself is a diverging activity? Examples: simulated annealing for CIV; valve mask; Secondary Research A large fraction of my engineering design activies are personal projects, which are done on my own and lack the diverse inputs of a team, and therefore I seek diverse inputs though secondary research. While many industrial text are not publicly available (like the ISO-10303 standard that I needed for a personal project), and therefore access to a research database is important, research papers, standards, and documentations in software industry tend to be openly accessible and can be easily found through a web search. In the past months, AI technology has made secondary research incredibly more convenient, or specifically, ChatGPT can find search terms and list reference solutions with simple descriptions and prompts. ChatGPT can list existing solutions to a problem with their applicable cases from a simple prompt. While the accuracy of the descriptions can be questionable, the names of the solutions listed are valid search terms for both Google and university library. No matter what search tool I use, a common problem is judging the effectiveness of a reference solution I found so I can decide what to do with it. While many software-related papers that introduce techniques have a section for testing results, they are often not suitable for comparison due to different testing procedure and the rapid development of hardware performance in the past years. I've tried to use citation count as a metric, however, I found an once influential but outdated paper can often have much more citations compared to a recent paper. Based on what I observed on the resources that really helped me, the CRAAP test (especially Authority and Currency) roughly filter out such resources. However, there are always exceptions, like there are several times I found a personal blog more helpful than a proceeding to a recognized conference. And considering the nature of a reference design, I sometimes judge a technique by novelity and the possibility of building other techniques on it, rather than its practical effectiveness. The CRAAP test. Image source: UW-Stout University Library Brainwriting description Use: praxis I, early praxis II Advantages: a variety of inputs, reduce fixedness; timed manner, stimulate ideas Disadvantages: done in teams, can be tiring and therefore do whatever looks \"good\" Functional Decomposition Pairwise Comparison & Pugh Chart Used for decision making Practical consideration: don't always rely on metrics SCAMPER Prototyping: Programming Advantages: no additional material/space, I'm experienced in, resources are openly accessible Communication: Toulmin's Model of Argument Like taught earlier in Praxis I, the model of arguments consists of ground, different types of claims, justifications, qualifiers, counterclaims, etc. When use in practice, like presenting my idea or suggestion to my teammates, I mostly understand it as when I give an argument, I need to give clear claim(s), justify it with evidence and methods of proof, and sometimes point out where the idea and suggestion is applicable and where it isn't. I found the practical effect of the model of arguments to be controversial. I feel in a team without much discrepancy in knowledge (like my design team in UTAT), using such a model is unnecessary, because all members can immediately get the idea without much misunderstanding when an suggestion is pointed out, and following a standard way can instead make communication lengthy and therefore unclear and make the situation awkward. However, considering my weakness in communication throughout my course project teams, I feel it's worthy to keep such a model in my handbook. The model of arguments indeed helped me in praxis courses. Earlier in praxis I, I tried to give feedback to my teammates by stating the problem I notice and potential fixes, but little of them were understood and considered. Team members would just say it's not a good idea for whatever reason and continue their discussion, or even without such an explaination. The setbacks made me learn not to give feedback and keep ideas to myself, which was the case for a large part of praxis I and earlier praxis II. I honestly thought my ideas aren't pointless and can sometimes even save a day, but I was just afraid to communicate them, only because I tagged myself to be poor at communication. I started using the model of arguments after strange (possibly delusional) experience. I rememeber the time I used it was in praxis II when we were discussing about scoping the design space, where other teammates were anchored to scoping to nurdle collection, and I can't remember much details about their reason. I gave the claim that we should focus on separation instead. I told them based on our diverging activity done in the previous day, separation has a much larger solution space than collection, and there are a variety of reference designs available that covers different technical area, and every team member should be able to find the part they are enthuasiastic about. In contrast, many reference and diverged solutions for collection don't meet the objectives, and there isn't much room to do better than the existing solution. And while one member tried to argue, everyone soon saw the potential of separation, and we agreed we'll focus on separation while not completely abandon collection. Notes from a teamwork strategist I received after talking to the teaching team in the middle of praxis I. It was almost lost until I unintentionally saw it several days ago and became thoughtful. I continued to intentionally provide feedback justified with logic and evidence in later team activities. However, I soon noticed the issue: my team members prefer give only the main point to keep it concise, while I sent long messages, and they often just passively agreed, and I seem have become the dominatig member in the team. While I tried to ask them for feedback with questions like \"what do you think?\", they usually just answered \"good\", occassionally asked questions about details of the plan that are trivial to answer. Two teammates were responsible for making the poster and constantly asked for feedback. While I continued to write long messages to justify my feedback, they tend to give a thumbs up reaction without commenting on them or taking them into practice. They also asked teaching assistants for feedback, and some of the TA's feedback overlap with my earlier feedback, which made me doubt whether I communicated clearly enough, or if my teammates just ignored my long \"essays.\" The conflict occurred during the weekend before the showcase on Monday. I know the objective of the handbook is not telling a long story, but I feel there's a need to clarify this. On Friday night, my teammates were working on the poster, and I had an assignment for another course due midnight, and I promised them I'll look at the poster and try to improve it after I finish the assignment. They gave a thumbs up reaction in the text chat like they always did. However, at midnight, I looked at the poster and tried to give feedback, but I found other teammates working intensely on the poster that I couldn't find a good way to interrupt. And I waited for them to sleep and started working on it at about 4am. I kept the text but completely redesigned the visuals based on both the TA's previous feedback and my opinion. I did so because I felt the poster is stuck in the state analogous to a local extrenum in optimization, and I thought I need to bring it out by starting from a new point. And I updated the image of the design to make it accurately represent our final design, since previously I was hyperfocused on refining the design and didn't communicate much with my teammates, and they seemed to not get how the design works. I worked until about 8am in the morning, until I saw my teammate's message that they are going to send their design to the printer. And I immediately presented my almost-finished new design. All of my other teammates immediately became angry, saying they stayed up for several nights on their poster, and I came out with a new design to compete with them. I explained that I only tried to make our showcase better, but they cut off saying they didn't want to take the risk because they already got approval from the TA for their design, despite not being perfect. I sent my design to the TA asking for feedback, and before I got a reply my teammates paid money for the printing. The TA replied in the afternoon, criticized me for \"creating a competing poster\", and told me it's something I should decide with my group. I had a good cry for the entire afternoon and didn't do any work for my team. When I explained the situation to my mother, she immediately told me she'll give me money to print my poster without me even mentioning more detail, which made me feed worse considering my family's tight financial condition. And my mental breakdown continued for the Sunday morning and afternoon. In the evening I had to go back to my team because the showcase was the next day, and we had conflicts again on the order of presentation and couldn't agree on one idea, and I pulled another all-nighter making the slide. The showcase was done without a complete rehearsal, and we displayed lots of discrepancy in our knowledge. In the team feedback, I was bombarded by blaming, saying I made my team less phychologically safe and I \"forced\" them to use my presentation slide, which I didn't mean any. I thought about explaining to them, but I was afraid that such attempt will only make things worse, plus one of my teammates blocked me on social media. CAD rendering for the poster I created at the night between that Friday and Saturday, several hours before the conflict occured. When I reflect on the cause of this conflict I thought it started with my hyperfocus on improving the design after our explicit task division. Arguing with justification definitely contributed to having people taking thumbs up as accostomed, since it made the message lengthy that people didn't want to read, and therefore communication was not delivered into practice despite my explicit attempts to engage discussion and feedback. While I consider the later part to be largely misunderstanding, the problem would be less serious if early communication was more effective. Despite I try to avoid blaming others, I think my teammate's earlier passiveness and lack of feedback is also part of the cause. Based on my past experiences with the model of arguments, I concluded the circumstances when it is feasible, as well as attentions required for delivery. Here I list them below. Justifying with logic and evidence can be helpful when (and in the opposite case the argument should be kept straightforward): The team is short-term with unfamiliar members. I observed that highly effective arguing can result in domination and make the team less psychologically safe, which is necessary for a long-term team where mutual trust is important. The negative impact on psychologically safety is less critical for a temporary team. All team members are willing to argue and give feedback. When everyone is willing to argue due to a small discrepancy in required knowledge/skills and high confidence, the imbalance between domination and accommodation will be less a problem. A domination would be beneficial based on consideration. In case a team has members specialized in specific areas, a domination with effective arguing can enable the member to show his/her strength and benefit the team. However, this needs to be done after subjective consideration of other member's opinions and delivered carefully to minimize conflicts. The communication is done through text. I feel humans tend to have short memory in oral communication, and many points can be missed in an oral speech. In a text communication tool like online chats and email, people can read back to understand the components of an argument and take time to consider. For an oral meeting, presenting the ideas in text beforehand can potentially benefit. Some attentions need to be paid to during and after arguing: Keep the message concise. If the message is too long or has too much information, audiences can become tired and sometime don't even read the message. It can be helpful to point out the claim first because I feel audiences have more impression on the first point. Encourage open-ended feedback. Encouraging open-ended feedback can motivate audiences to think about the problem, and specific questions about part of the argument can help understanding. While I haven't tried it yet, I learned from a teamwork strategist that asking for feedback in a timed manner (ex. \"You have one minute to let me know what you think of this idea\") can have stimulating effects. Considering these tips are largely concluded from my failure experiences and have not been validated in practice, as well as my born weakness in communication, these tips likely need to be adjusted and/or replaced based on their practical issues, which can be tested during future teamwork activities. Communication and teamwork with continue to be something that I need to experiment with and improve on during their use in practice.","title":"TMF"},{"location":"tmf/#personal-engineering-design-models","text":"","title":"Personal Engineering Design Models"},{"location":"tmf/#hoover-dam","text":"Transform real world -> models, models are easier to solve and analyze Evidence: UTAT, personal projects Useful when the problem can be easily math'd; (robotics, scientific computing, CG) Not good for lots of human factors Issues: framing can be inaccurate, unexpected issues; Need to leave something to validation","title":"Hoover Dam"},{"location":"tmf/#framing-diverging-converging-represent","text":"Global optimization done by humans Divergence: avoid bias and blind spots, usually done in teams; Individual: research reference designs Convergence: eliminate through research/analysis, analogous to shortcuts/interpolation for numerical optimization Negotiate objectives during diverging and testing Make more detailed/specific through iterations (refinement in optimization) Be patient, too fast -> bad results","title":"Framing, Diverging, Converging, Represent"},{"location":"tmf/#requirements-model","text":"As a model used in the framing strand, the requirements model frames stakeholder requirements into a list (and sometimes hierarchy) of objectives, which each include numerical metrics, criteria mapping metrics to utility, and constraints deciding whether a solution is feasible. I understand this from how I understand engineering design as an optimization problem where the total utility is to be maximized, subject to hard constraints that must not violate and soft constraints that penalty the utility. While in an engineering design activity done by humans, making the objectives can encourage better understanding of stakeholder needs and give directions for divergence for convergence. Since numerical metrics are necessary for optimization algorithms used by computers, I've been doing framing works for my programming projects. One example would be an optimization in the mesh generator, where I want each tetrahedron to be close to regular, and I model the utility of an element as the logarithm of its volume after normalization to a specific size, which empirically gives a much better result than a stress-based metric like used in several papers. The constraint would be that the signed volume must be non-negative, otherwise the logarithm would be undefined. Another example is the CIV102 bridge project, where I tried to maximize the overall factor of safety to meet the objective to loading more weights. The code for the metric for the \"goodness\" of a mesh element, along with other metrics (commented code) that didn't work as good. This demonstrates how the choice of a metric can affect the optimization result and process. In human-delivered engineering design activities, the metric in the requirements model has been proven useful for verification. For example, when testing foggy glasses solutions for Praxis I, I found a metric for the visibility (in contrast to blurriness) of digital images through secondary research, and my team conducted test for four cardiate solutions. The metrics were used in Pugh charts that helped us converge to a final design. However, overall in praxis courses, I found the metrics can be not helpful and unnecessary, and they can even make verification more difficult and less representative. We spent some time researching metrics when writing the design brief and the RFP. And when working with other people's design brief and RFP, we found metrics to be difficult to test and don't accurately model the design objective. For example, the nurdle RFP used force required to operate the design as an metric for physical strain, but in testing we found holding a hand shovel can be tiresome even though little force was required. And we could not access the cited research for a so called \"material sustainability index.\" At the end, we had to reframe the objectives and leave some testing to validation instead of verification. Based on these experiences, I conclude that while framing requirements into objectives can benefit engineering design in many ways, the choice on a metric and whether a metric should be used depends on the case. In the case where there are multiple cardiate designs and there are research showing the effectiveness of a metric on the situation, a metric that is easy to test can greatly help convergence. However, if finding a representative metric is difficult (which is common for objectives involving human factors), one may consider finding other ways to converge and verify/validate the solution. Even if a metric is needed, engineers still need to figure out a metric that is representative and easy to measure.","title":"Requirements Model"},{"location":"tmf/#personal-engineering-design-tools","text":"https://dhrumil0902.github.io/portfolio/handbook.pdf Purpose, how, example, advantage/disadvantage (list) http://xueqilin.me/engsci-2t4/esc102/handbook.pdf https://raw.githubusercontent.com/JLefebvre55/ESC102-Handbook/master/Handbook.pdf https://www.peterfisk.com/wp-content/uploads/2016/01/27-Creativity-Tools-for-Divergent-and-Convergent-Thinking.pdf Follow an order of design process (after understanding the problem) - Do some individual brainstorming (biomimicry, attribute listing, lotus bloosom, etc.) before secondary research to avoid anchoring - Generate a variety of ideas through brainwriting","title":"Personal Engineering Design Tools"},{"location":"tmf/#biomimicry","text":"Inspired by nature; Nature is good at optimization; Suitable for me, it's an individual acticity itself, and I'm a fan of nature Advantages: take a mental break Think similar problems in nature itself is a diverging activity? Examples: simulated annealing for CIV; valve mask;","title":"Biomimicry"},{"location":"tmf/#secondary-research","text":"A large fraction of my engineering design activies are personal projects, which are done on my own and lack the diverse inputs of a team, and therefore I seek diverse inputs though secondary research. While many industrial text are not publicly available (like the ISO-10303 standard that I needed for a personal project), and therefore access to a research database is important, research papers, standards, and documentations in software industry tend to be openly accessible and can be easily found through a web search. In the past months, AI technology has made secondary research incredibly more convenient, or specifically, ChatGPT can find search terms and list reference solutions with simple descriptions and prompts. ChatGPT can list existing solutions to a problem with their applicable cases from a simple prompt. While the accuracy of the descriptions can be questionable, the names of the solutions listed are valid search terms for both Google and university library. No matter what search tool I use, a common problem is judging the effectiveness of a reference solution I found so I can decide what to do with it. While many software-related papers that introduce techniques have a section for testing results, they are often not suitable for comparison due to different testing procedure and the rapid development of hardware performance in the past years. I've tried to use citation count as a metric, however, I found an once influential but outdated paper can often have much more citations compared to a recent paper. Based on what I observed on the resources that really helped me, the CRAAP test (especially Authority and Currency) roughly filter out such resources. However, there are always exceptions, like there are several times I found a personal blog more helpful than a proceeding to a recognized conference. And considering the nature of a reference design, I sometimes judge a technique by novelity and the possibility of building other techniques on it, rather than its practical effectiveness. The CRAAP test. Image source: UW-Stout University Library","title":"Secondary Research"},{"location":"tmf/#brainwriting","text":"description Use: praxis I, early praxis II Advantages: a variety of inputs, reduce fixedness; timed manner, stimulate ideas Disadvantages: done in teams, can be tiring and therefore do whatever looks \"good\"","title":"Brainwriting"},{"location":"tmf/#functional-decomposition","text":"","title":"Functional Decomposition"},{"location":"tmf/#pairwise-comparison-pugh-chart","text":"Used for decision making Practical consideration: don't always rely on metrics","title":"Pairwise Comparison &amp; Pugh Chart"},{"location":"tmf/#scamper","text":"","title":"SCAMPER"},{"location":"tmf/#prototyping-programming","text":"Advantages: no additional material/space, I'm experienced in, resources are openly accessible","title":"Prototyping: Programming"},{"location":"tmf/#communication-toulmins-model-of-argument","text":"Like taught earlier in Praxis I, the model of arguments consists of ground, different types of claims, justifications, qualifiers, counterclaims, etc. When use in practice, like presenting my idea or suggestion to my teammates, I mostly understand it as when I give an argument, I need to give clear claim(s), justify it with evidence and methods of proof, and sometimes point out where the idea and suggestion is applicable and where it isn't. I found the practical effect of the model of arguments to be controversial. I feel in a team without much discrepancy in knowledge (like my design team in UTAT), using such a model is unnecessary, because all members can immediately get the idea without much misunderstanding when an suggestion is pointed out, and following a standard way can instead make communication lengthy and therefore unclear and make the situation awkward. However, considering my weakness in communication throughout my course project teams, I feel it's worthy to keep such a model in my handbook. The model of arguments indeed helped me in praxis courses. Earlier in praxis I, I tried to give feedback to my teammates by stating the problem I notice and potential fixes, but little of them were understood and considered. Team members would just say it's not a good idea for whatever reason and continue their discussion, or even without such an explaination. The setbacks made me learn not to give feedback and keep ideas to myself, which was the case for a large part of praxis I and earlier praxis II. I honestly thought my ideas aren't pointless and can sometimes even save a day, but I was just afraid to communicate them, only because I tagged myself to be poor at communication. I started using the model of arguments after strange (possibly delusional) experience. I rememeber the time I used it was in praxis II when we were discussing about scoping the design space, where other teammates were anchored to scoping to nurdle collection, and I can't remember much details about their reason. I gave the claim that we should focus on separation instead. I told them based on our diverging activity done in the previous day, separation has a much larger solution space than collection, and there are a variety of reference designs available that covers different technical area, and every team member should be able to find the part they are enthuasiastic about. In contrast, many reference and diverged solutions for collection don't meet the objectives, and there isn't much room to do better than the existing solution. And while one member tried to argue, everyone soon saw the potential of separation, and we agreed we'll focus on separation while not completely abandon collection. Notes from a teamwork strategist I received after talking to the teaching team in the middle of praxis I. It was almost lost until I unintentionally saw it several days ago and became thoughtful. I continued to intentionally provide feedback justified with logic and evidence in later team activities. However, I soon noticed the issue: my team members prefer give only the main point to keep it concise, while I sent long messages, and they often just passively agreed, and I seem have become the dominatig member in the team. While I tried to ask them for feedback with questions like \"what do you think?\", they usually just answered \"good\", occassionally asked questions about details of the plan that are trivial to answer. Two teammates were responsible for making the poster and constantly asked for feedback. While I continued to write long messages to justify my feedback, they tend to give a thumbs up reaction without commenting on them or taking them into practice. They also asked teaching assistants for feedback, and some of the TA's feedback overlap with my earlier feedback, which made me doubt whether I communicated clearly enough, or if my teammates just ignored my long \"essays.\" The conflict occurred during the weekend before the showcase on Monday. I know the objective of the handbook is not telling a long story, but I feel there's a need to clarify this. On Friday night, my teammates were working on the poster, and I had an assignment for another course due midnight, and I promised them I'll look at the poster and try to improve it after I finish the assignment. They gave a thumbs up reaction in the text chat like they always did. However, at midnight, I looked at the poster and tried to give feedback, but I found other teammates working intensely on the poster that I couldn't find a good way to interrupt. And I waited for them to sleep and started working on it at about 4am. I kept the text but completely redesigned the visuals based on both the TA's previous feedback and my opinion. I did so because I felt the poster is stuck in the state analogous to a local extrenum in optimization, and I thought I need to bring it out by starting from a new point. And I updated the image of the design to make it accurately represent our final design, since previously I was hyperfocused on refining the design and didn't communicate much with my teammates, and they seemed to not get how the design works. I worked until about 8am in the morning, until I saw my teammate's message that they are going to send their design to the printer. And I immediately presented my almost-finished new design. All of my other teammates immediately became angry, saying they stayed up for several nights on their poster, and I came out with a new design to compete with them. I explained that I only tried to make our showcase better, but they cut off saying they didn't want to take the risk because they already got approval from the TA for their design, despite not being perfect. I sent my design to the TA asking for feedback, and before I got a reply my teammates paid money for the printing. The TA replied in the afternoon, criticized me for \"creating a competing poster\", and told me it's something I should decide with my group. I had a good cry for the entire afternoon and didn't do any work for my team. When I explained the situation to my mother, she immediately told me she'll give me money to print my poster without me even mentioning more detail, which made me feed worse considering my family's tight financial condition. And my mental breakdown continued for the Sunday morning and afternoon. In the evening I had to go back to my team because the showcase was the next day, and we had conflicts again on the order of presentation and couldn't agree on one idea, and I pulled another all-nighter making the slide. The showcase was done without a complete rehearsal, and we displayed lots of discrepancy in our knowledge. In the team feedback, I was bombarded by blaming, saying I made my team less phychologically safe and I \"forced\" them to use my presentation slide, which I didn't mean any. I thought about explaining to them, but I was afraid that such attempt will only make things worse, plus one of my teammates blocked me on social media. CAD rendering for the poster I created at the night between that Friday and Saturday, several hours before the conflict occured. When I reflect on the cause of this conflict I thought it started with my hyperfocus on improving the design after our explicit task division. Arguing with justification definitely contributed to having people taking thumbs up as accostomed, since it made the message lengthy that people didn't want to read, and therefore communication was not delivered into practice despite my explicit attempts to engage discussion and feedback. While I consider the later part to be largely misunderstanding, the problem would be less serious if early communication was more effective. Despite I try to avoid blaming others, I think my teammate's earlier passiveness and lack of feedback is also part of the cause. Based on my past experiences with the model of arguments, I concluded the circumstances when it is feasible, as well as attentions required for delivery. Here I list them below. Justifying with logic and evidence can be helpful when (and in the opposite case the argument should be kept straightforward): The team is short-term with unfamiliar members. I observed that highly effective arguing can result in domination and make the team less psychologically safe, which is necessary for a long-term team where mutual trust is important. The negative impact on psychologically safety is less critical for a temporary team. All team members are willing to argue and give feedback. When everyone is willing to argue due to a small discrepancy in required knowledge/skills and high confidence, the imbalance between domination and accommodation will be less a problem. A domination would be beneficial based on consideration. In case a team has members specialized in specific areas, a domination with effective arguing can enable the member to show his/her strength and benefit the team. However, this needs to be done after subjective consideration of other member's opinions and delivered carefully to minimize conflicts. The communication is done through text. I feel humans tend to have short memory in oral communication, and many points can be missed in an oral speech. In a text communication tool like online chats and email, people can read back to understand the components of an argument and take time to consider. For an oral meeting, presenting the ideas in text beforehand can potentially benefit. Some attentions need to be paid to during and after arguing: Keep the message concise. If the message is too long or has too much information, audiences can become tired and sometime don't even read the message. It can be helpful to point out the claim first because I feel audiences have more impression on the first point. Encourage open-ended feedback. Encouraging open-ended feedback can motivate audiences to think about the problem, and specific questions about part of the argument can help understanding. While I haven't tried it yet, I learned from a teamwork strategist that asking for feedback in a timed manner (ex. \"You have one minute to let me know what you think of this idea\") can have stimulating effects. Considering these tips are largely concluded from my failure experiences and have not been validated in practice, as well as my born weakness in communication, these tips likely need to be adjusted and/or replaced based on their practical issues, which can be tested during future teamwork activities. Communication and teamwork with continue to be something that I need to experiment with and improve on during their use in practice.","title":"Communication: Toulmin's Model of Argument"}]}